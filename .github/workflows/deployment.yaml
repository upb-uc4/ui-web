name: Vue Deployment Pipeline

on:
  push:
    branches: [ main ]

jobs:
  # Tag and then create a release
  tag_n_release:
    name: Tag and release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - id: step1
      name: Create tag
      uses: Klemensas/action-autotag@stable
      with:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        tag_prefix: "v"
        tag_message: "Please refer to [CHANGELOG.md](https://github.com/upb-uc4/ui-web/blob/master/CHANGELOG.md) for details."
    - name: Create Release for Tag
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ steps.step1.outputs.tagname }}
        release_name: Release ${{ steps.step1.outputs.tagname }}
        body: |
          Please refer to [CHANGELOG.md](https://github.com/upb-uc4/ui-web/blob/master/CHANGELOG.md) for details.
        draft: false
        prerelease: true

  # deploy on dockerhub
  deploy:
    name: Deploy to DockerHub
    runs-on: ubuntu-latest
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Check out source repository
      uses: actions/checkout@v2
    
    # Set up Node
    - name: Set up Node
      uses: actions/setup-node@v1
      with:
        node-version: '12'
        
    - name: Login to DockerHub Registry
      run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    # install npm dependencies
    - name: Install dependencies
      run: npm install
    
    # build image
    - name: Build docker image
      run: |
        echo "##########################"
        echo "#      Build Image       #"
        echo "##########################"
        npm run docker:build
        
     # publish image
    - name: Publish docker image
      run: |
        echo "##########################"
        echo "#     Publish Image      #"
        echo "##########################"
        npm run docker:publish